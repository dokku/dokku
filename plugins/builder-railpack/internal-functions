#!/usr/bin/env bash
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_CORE_AVAILABLE_PATH/common/property-functions"
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x

cmd-builder-railpack-report() {
  declare desc="displays a builder-railpack report for one or more apps"
  declare cmd="builder-railpack:report"
  [[ "$1" == "$cmd" ]] && shift 1
  declare APP="$1" INFO_FLAG="$2"

  if [[ -n "$APP" ]] && [[ "$APP" == --* ]]; then
    INFO_FLAG="$APP"
    APP=""
  fi

  if [[ -z "$APP" ]] && [[ -z "$INFO_FLAG" ]]; then
    INFO_FLAG="true"
  fi

  if [[ -z "$APP" ]]; then
    for app in $(dokku_apps); do
      cmd-builder-railpack-report-single "$app" "$INFO_FLAG" | tee || true
    done
  else
    cmd-builder-railpack-report-single "$APP" "$INFO_FLAG"
  fi
}

cmd-builder-railpack-report-single() {
  declare APP="$1" INFO_FLAG="$2"
  if [[ "$INFO_FLAG" == "true" ]]; then
    INFO_FLAG=""
  fi
  verify_app_name "$APP"
  local flag_map=(
    "--builder-railpack-computed-railpackjson-path: $(fn-builder-railpack-computed-railpackjson-path "$APP")"
    "--builder-railpack-global-railpackjson-path: $(fn-builder-railpack-global-railpackjson-path "$APP")"
    "--builder-railpack-railpackjson-path: $(fn-builder-railpack-railpackjson-path "$APP")"
    "--builder-railpack-computed-no-cache: $(fn-builder-railpack-computed-no-cache "$APP")"
    "--builder-railpack-global-no-cache: $(fn-builder-railpack-global-no-cache "$APP")"
    "--builder-railpack-no-cache: $(fn-builder-railpack-no-cache "$APP")"
  )

  if [[ -z "$INFO_FLAG" ]]; then
    dokku_log_info2_quiet "${APP} builder-railpack information"
    for flag in "${flag_map[@]}"; do
      key="$(echo "${flag#--}" | cut -f1 -d' ' | tr - ' ')"
      dokku_log_verbose "$(printf "%-30s %-25s" "${key^}" "${flag#*: }")"
    done
  else
    local match=false
    local value_exists=false
    for flag in "${flag_map[@]}"; do
      valid_flags="${valid_flags} $(echo "$flag" | cut -d':' -f1)"
      if [[ "$flag" == "${INFO_FLAG}:"* ]]; then
        value=${flag#*: }
        size="${#value}"
        if [[ "$size" -ne 0 ]]; then
          echo "$value" && match=true && value_exists=true
        else
          match=true
        fi
      fi
    done
    [[ "$match" == "true" ]] || dokku_log_fail "Invalid flag passed, valid flags:${valid_flags}"
    [[ "$value_exists" == "true" ]] || dokku_log_fail "not deployed"
  fi
}

fn-builder-railpack-computed-railpackjson-path() {
  declare APP="$1"

  file="$(fn-builder-railpack-railpackjson-path "$APP")"
  if [[ "$file" == "" ]]; then
    file="$(fn-builder-railpack-global-railpackjson-path "$APP")"
  fi

  echo "$file"
}

fn-builder-railpack-global-railpackjson-path() {
  declare APP="$1"

  fn-plugin-property-get "builder-railpack" "--global" "railpackjson-path" "railpack.json"
}

fn-builder-railpack-railpackjson-path() {
  declare APP="$1"

  fn-plugin-property-get "builder-railpack" "$APP" "railpackjson-path" ""
}

fn-builder-railpack-computed-no-cache() {
  declare APP="$1"

  file="$(fn-builder-railpack-no-cache "$APP")"
  if [[ "$file" == "" ]]; then
    file="$(fn-builder-railpack-global-no-cache "$APP")"
  fi

  echo "$file"
}

fn-builder-railpack-global-no-cache() {
  declare APP="$1"

  fn-plugin-property-get "builder-railpack" "--global" "no-cache" "false"
}

fn-builder-railpack-no-cache() {
  declare APP="$1"

  fn-plugin-property-get "builder-railpack" "$APP" "no-cache" ""
}
