#!/usr/bin/env bash
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

fn-report-proxy-label-overwrite() {
  LABELS="$1"
  PROXY_LABELS_FILE_PATH="$2"
  shift 2

  if [[ -f "$PROXY_LABELS_FILE_PATH" ]]; then
    local DONE=false
    until $DONE; do
      local line
      read -r line || local DONE=true

      [[ -z "$line" ]] && continue

      case "$line" in
        \#*)
          continue
          ;;

        --label*)
          local label_name="$(echo "$line" | sed -E "s/^--label ['\"]([^=]+)=.*/\1/")"
          local escaped_label_name="$(escape_extended_sed "$passed_label_name")"
          local match="$(echo "$LABELS" | sed -E "s/.*--label ['\"]($escaped_label_name)=.*/\1/")"
          if [[ -n "$match" ]]; then
            dokku_log_warn "Dokku label \"$match\" will be overwritten by user-set proxy label."
          fi
          continue
          ;;

        *)
          dokku_log_warn "Invalid line '$line' in proxy label file $PROXY_FILE_PATH"
          ;;
      esac
    done <"$PROXY_LABELS_FILE_PATH"
  fi
}

fn-get-proxy-labels-file-path() {
  declare desc="return proxy labels config file path for specified proxy"
  local APP="$1"
  local PROXY="$2"
  local PROXY_FILE="${DOKKU_ROOT}/${APP}/PROXY_LABELS_${PROXY^^}"
  echo "$PROXY_FILE"
}

get_proxy_labels_file_path() {
  declare desc="return proxy labels config file path for specified proxy"
  local proxy_labels_file_prefix="PROXY_LABELS_"
  local APP="$1"
  local PROXY="$2"
  [[ "$APP" && "$PROXY" ]] || dokku_log_fail "Error: proxy_labels_file_path is incomplete."
  fn-get-proxy-labels-file-path "$APP" "$PROXY"
}

create_proxy_labels_file_if_required() {
  declare desc="create proxy labels file for app"
  local proxy_labels_file_path="$1"
  [[ -f "$proxy_labels_file_path" ]] || {
    touch "$proxy_labels_file_path"
  }
}

display_proxy_labels() {
  declare desc="print user-set app container labels for specified proxy"
  local APP="$1"
  local PROXY="$2"
  shift 2

  local proxy_labels_file_path="$(get_proxy_labels_file_path "$APP" "$PROXY")"
  echo "${PROXY^} labels:"
  sed -e 's/^/    /' "$proxy_labels_file_path"
}

show_proxy_label() {
  declare desc="print single user-set app container label for specified proxy"
  local APP="$1"
  local PROXY="$2"
  local passed_label_name="$3"
  shift 3

  local proxy_labels_file_path="$(get_proxy_labels_file_path "$APP" "$PROXY")"
  [[ ! -s "$proxy_labels_file_path" ]] || {
    local all_proxy_labels="$(<"$proxy_labels_file_path")"
    local escaped_label_name="$(escape_extended_sed "$passed_label_name")"
    local proxy_label_value="$(echo -e "${all_proxy_labels}" | sed -E -n "s/^--label ['\"]${escaped_label_name}=(.*)['\"] \$/\1/p")"

    echo "${PROXY^} label:"
    echo "    ${passed_label_name}: ${proxy_label_value}"
  }
}

add_passed_proxy_label() {
  declare desc="adds container label to app for specified proxy"
  local APP="$1"
  local PROXY="$2"
  local passed_label_name="$3"
  local passed_label_value="$4"
  shift 4

  local proxy_labels_file_path="$(get_proxy_labels_file_path "$APP" "$PROXY")"
  create_proxy_labels_file_if_required "$proxy_labels_file_path"
  remove_passed_proxy_label "$APP" "$PROXY" "$passed_label_name" >/dev/null
  echo "--label '${passed_label_name}=${passed_label_value}' " >>"$proxy_labels_file_path"
  local all_proxy_labels="$(<"$proxy_labels_file_path")"
  echo -e "${all_proxy_labels}" | sed '/^$/d' | sort -u >"$proxy_labels_file_path"
}

remove_passed_proxy_label() {
  declare desc="removes container label from app for specified proxy"
  local APP="$1"
  local PROXY="$2"
  local passed_label_name="$3"
  shift 3

  local proxy_labels_file_path="$(get_proxy_labels_file_path "$APP" "$PROXY")"
  [[ ! -s "$proxy_labels_file_path" ]] || {
    local all_proxy_labels="$(<"$proxy_labels_file_path")"
    local escaped_label_name="$(escape_extended_sed "$passed_label_name")"
    local all_proxy_labels="$(echo -e "${all_proxy_labels}" | sed -E "s/^--label ['\"]${escaped_label_name}=.*\$//")"
    echo -e "${all_proxy_labels}" | sed '/^$/d' | sort -u >"$proxy_labels_file_path"
  }
}
